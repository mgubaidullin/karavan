{"version":3,"sources":["Models.tsx","Karavan.tsx","components/KameletsPanel.tsx","components/KameletNodeAction.tsx","components/KameletNodeSource.tsx","components/KameletNodeSink.tsx","components/PropertiesPanel.tsx","components/ConnectEdge.tsx","components/KaravanFlow.tsx","logo.svg","App.tsx","index.tsx"],"names":["Property","id","title","description","type","default","format","value","Definition","required","properties","KameletSpec","definition","types","flow","Labels","Annotations","KameletMetadata","name","labels","annotations","Kamelet","apiVersion","kind","metadata","spec","this","Ref","Source","ref","Sink","Step","KameletBindingSpec","source","steps","sink","KameletBindingMetadata","KameletBinding","BindingData","kamelet","Map","Object","entries","forEach","key","map","prop","push","selection","Subject","edgeDeletion","generator","yaml","Karavan","message","next","asObservable","Date","now","jsonToKamelet","json","fromJson","JSON","parse","k","findNextElement","elements","start","connect","find","e","target","createProperties","result","stepBind","step","bind","data","binding","keys","length","sinkBind","generateBindings","sources","filter","kameletBindings","sourceBind","YAML","stringify","mapAsMap","join","request","a","fetch","response","text","fromYaml","KameletsPanel","useState","kamelets","setKamelets","group","setGroup","setFilter","filtered","setFiltered","selectGroup","isSelected","event","currentTarget","refine","label","toLowerCase","includes","sort","b","useEffect","then","listYaml","split","element","Promise","all","list","className","Title","headingLevel","size","ToggleGroup","isCompact","aria-label","ToggleGroupItem","buttonId","onChange","TextInput","autoComplete","placeholder","onDragStart","dataTransfer","setData","nodeType","nativeEvent","offsetX","toString","offsetY","effectAllowed","draggable","src","icon","alt","KameletNodeAction","isConnectable","position","Position","Top","Bottom","memo","KameletNodeSource","KameletNodeSink","PropertiesPanel","onUpdate","bindingData","setBindingData","hidden","setHidden","field","clone","assign","call","subscribe","unsubscribe","Form","FormGroup","isRequired","fieldId","property","labelIcon","Popover","headerContent","bodyContent","onClick","preventDefault","noVerticalAlign","index","findIndex","x","p","fieldChanged","ConnectEdge","sourceX","sourceY","targetX","targetY","sourcePosition","targetPosition","arrowHeadType","markerEndId","edgePath","getBezierPath","markerEnd","getMarkerEnd","getEdgeCenter","centerX","centerY","d","width","height","foreignObjectSize","y","requiredExtensions","Button","variant","onKeyDown","keyCode","KaravanFlow","reactFlowInstance","setReactFlowInstance","visualElements","setVisualElements","bindings","setBindings","setSelectedElements","useStoreActions","actions","els","el","get","newElements","splice","vis","nodeTypes","action","edgeTypes","onConnect","params","addEdge","onElementsRemove","elementsToRemove","removeElements","delete","selectNodesOnDrag","multiSelectionKeyCode","onSelectionChange","elId","onLoad","_reactFlowInstance","onDrop","getData","Number","project","clientX","clientY","elementId","set","newNode","style","opacity","es","concat","onDragOver","dropEffect","defaultZoom","zoomOnScroll","BackgroundVariant","Dots","gap","App","modalOpen","setModalOpen","setYaml","Tools","PageHeaderTools","Header","PageHeader","logo","Brand","headerTools","CodeBlockAction","ClipboardCopyButton","textId","clipboard","parentElement","document","createElement","appendChild","select","execCommand","removeChild","exitDelay","maxWidth","Page","header","Modal","isOpen","onClose","CodeBlock","CodeBlockCode","routes","path","component","ReactDOM","render","forceRefresh","route","exact","getElementById"],"mappings":"0RACaA,EAAb,sCACEC,GAAa,GADf,KAEEC,MAAgB,GAFlB,KAGEC,YAAsB,GAHxB,KAIEC,KAAe,GAJjB,KAKEC,QAAkB,GALpB,KAMEC,OAAiB,GANnB,KAOE,iBAA0B,GAP5B,KAQEC,MAAyB,IAGdC,EAAb,sCACEN,MAAgB,GADlB,KAEEC,YAAsB,GAFxB,KAGEM,SAAqB,GAHvB,KAIEC,WAAkB,IAGPC,EAAb,sCACEC,WAAyB,IAAIJ,EAD/B,KAEEK,MAAa,GAFf,KAGEC,KAAY,IAGDC,EAAb,sCACE,iCAAgD,IAGrCC,EAAb,sCACE,iCAAgD,IAGrCC,EAAb,sCACEC,KAAe,GADjB,KAEEC,OAAiB,IAAIJ,EAFvB,KAGEK,YAA2B,IAAIJ,GAGpBK,EAAb,iDACEC,WAAqB,4BADvB,KAEEC,KAAe,UAFjB,KAGEC,SAA4B,IAAIP,EAHlC,KAIEQ,KAAoB,IAAId,EAJ1B,wCAME,WACE,OAAOe,KAAKF,SAASL,OAAO,kCAAoC,KAPpE,kBAUE,WACE,OAAOO,KAAKF,SAASJ,YAAY,kCAAoC,KAXzE,mBAcE,WACE,OAAOM,KAAKD,KAAKb,WAAWV,QAfhC,wBAkBE,WACE,OAAOwB,KAAKD,KAAKb,WAAWF,eAnBhC,KAwBaiB,EAAb,sCACEL,WAAqB,4BADvB,KAEEC,KAAe,UAFjB,KAGEL,KAAe,IAGJU,EAAb,sCAEEC,IAAW,IAAIF,EAFjB,KAGEjB,gBAHF,GAMaoB,EAAb,sCAEED,IAAW,IAAIF,EAFjB,KAGEjB,gBAHF,GAMaqB,EAAb,sCACEF,IAAW,IAAIF,EADjB,KAEEjB,gBAFF,GAKasB,EAAb,sCACEC,OAAiB,IAAIL,EADvB,KAEEM,MAAsB,GAFxB,KAGEC,KAAa,IAAIL,GAGNM,EAAb,sCACElB,KAAe,IAGXmB,E,sCACJf,WAAqB,4B,KACrBC,KAAe,iB,KACfC,SAAmC,IAAIY,E,KACvCX,KAA2B,IAAIO,GAMpBM,EAOX,WAAYrC,EAAYsC,GAAmB,IAAD,gCAN1CtC,GAAa,GAM6B,KAL1CiB,KAAe,GAK2B,KAJ1ChB,MAAgB,GAI0B,KAH1CqC,aAG0C,OAF1C7B,WAAyB,GAGvBgB,KAAKzB,GAAKA,EACVyB,KAAKa,QAAUA,EACfb,KAAKR,KAAOqB,EAAQf,SAASN,KAC7BQ,KAAKxB,MAAQqC,EAAQd,KAAKb,WAAWV,OACPqC,EAAQd,KAAKb,WAAWF,WAAa,IAAI8B,IAAIC,OAAOC,QAAQH,EAAQd,KAAKb,WAAWF,aAAe,IAAI8B,KACjIG,SAAQ,SAACpC,EAAOqC,EAAKC,GACvB,IAAMC,EAAO,IAAI9C,EACjB8C,EAAK7C,GAAK2C,EACVE,EAAK5C,MAAQK,EAAML,MACnB4C,EAAKzC,QAAUE,EAAMF,QACrByC,EAAK3C,YAAcI,EAAMJ,YACzB2C,EAAKxC,OAASC,EAAMD,OACpBwC,EAAK1C,KAAOG,EAAMH,KAClB0C,EAAK,iBAAmBvC,EAAM,iBAC9B,EAAKG,WAAWqC,KAAKD,O,iBC3HrBE,EAAY,IAAIC,IAChBC,EAAe,IAAID,IACnBE,EAAY,IAAIF,IAChBG,EAAO,IAAIH,IAEJI,EACM,SAACC,GAAD,OAAgCN,EAAUO,KAAKD,IADrDD,EAGU,kBAAML,EAAUQ,gBAH1BH,EAKK,SAACpD,GAAD,OAAgBiD,EAAaK,KAAKtD,IALvCoD,EAMG,kBAAMH,EAAaM,gBANtBH,EAQK,SAACpD,GAAD,OAAgBkD,EAAUI,KAAKtD,IARpCoD,EASG,kBAAMF,EAAUK,gBATnBH,EAWC,SAACpD,GAAD,OAAgBmD,EAAKG,KAAK,CAACE,KAAKC,MAAOzD,KAXxCoD,EAYD,kBAAMD,EAAKI,gBAGVG,EAAgB,SAACC,GAC1B,IAAMC,EAAoBC,KAAKC,MAAMH,GAC/BI,EAAa,IAAI3C,EAKvB,OAJA2C,EAAE1C,WAAauC,EAASvC,WACxB0C,EAAEzC,KAAOsC,EAAStC,KAClByC,EAAExC,SAAWqC,EAASrC,SACtBwC,EAAEvC,KAAOoC,EAASpC,KACXuC,GAGLC,EAAkB,SAACC,EAAiBC,GACtC,IAAMC,EAAUF,EAASG,MAAK,SAACC,GAAD,MAAuB,YAAXA,EAAElE,MAAsBkE,EAAErC,SAAWkC,EAAMlE,MACrF,OAAOmE,GAAWF,EAASG,MAAK,SAACC,GAAD,MAAuB,YAAXA,EAAElE,MAAsBkE,EAAErE,KAAOmE,EAAQG,WAGnFC,EAAmB,SAAC9D,GACtB,IAAM+D,EAAa,GAInB,OAHA/D,EAAWiC,SAAQ,SAAAG,GACXA,EAAKvC,QAAOkE,EAAO3B,EAAK7C,IAAM6C,EAAKvC,UAEpCkE,GAWLC,EAAW,SAACC,GACd,IAAMC,EAAa,IAAI7C,EAIvB,OAHA6C,EAAK/C,IAAIX,KAAOyD,EAAKE,KAAKC,QAAQvC,QAAQf,SAASN,KACnD0D,EAAKlE,WAAa8D,EAAiBG,EAAKE,KAAKC,QAAQpE,YACT,IAAxC+B,OAAOsC,KAAKH,EAAKlE,YAAYsE,eAAqBJ,EAAKlE,WACpDkE,GAGLK,GAAW,SAACN,GACd,IAAMC,EAAa,IAAI9C,EAIvB,OAHA8C,EAAK/C,IAAIX,KAAOyD,EAAKE,KAAKC,QAAQvC,QAAQf,SAASN,KACnD0D,EAAKlE,WAAa8D,EAAiBG,EAAKE,KAAKC,QAAQpE,YACT,IAAxC+B,OAAOsC,KAAKH,EAAKlE,YAAYsE,eAAqBJ,EAAKlE,WACpDkE,GAGEM,GAAmB,SAAChB,GAC7B,IAAMiB,EAAyBjB,EAASkB,QAAO,SAAAd,GAAC,MAAe,WAAXA,EAAElE,QAChDiF,EAA4B,GAClCF,EAAQxC,SAAQ,SAAAV,GAGZ,IAFA,IAAM2C,EA5BK,SAAC3C,GAChB,IAAM2C,EAAuB,IAAIvC,EAKjC,OAJAuC,EAAKpD,SAASN,KAAOe,EAAO4C,KAAKC,QAAQ5D,KACzC0D,EAAKnD,KAAKQ,OAAOJ,IAAIX,KAAOe,EAAO4C,KAAKC,QAAQvC,QAAQf,SAASN,KACjE0D,EAAKnD,KAAKQ,OAAOvB,WAAa8D,EAAiBvC,EAAO4C,KAAKC,QAAQpE,YACX,IAApD+B,OAAOsC,KAAKH,EAAKnD,KAAKQ,OAAOvB,YAAYsE,eAAqBJ,EAAKnD,KAAKQ,OAAOvB,WAC5EkE,EAsB0BU,CAAWrD,GACpCsB,EAAOtB,EACJsB,IACHA,EAAOU,EAAgBC,EAAUX,KACP,WAAdA,EAAKnD,KACbwE,EAAKnD,KAAKS,MAAMa,KAAK2B,EAASnB,IACvBA,GAAsB,SAAdA,EAAKnD,OACpBwE,EAAKnD,KAAKU,KAAO8C,GAAS1B,IAGH,IAA3BqB,EAAKnD,KAAKS,MAAM8C,eAAqBJ,EAAKnD,KAAKS,MACnD,IAAMkB,EAAOmC,IAAKC,UAAUZ,EAAM,CAAEa,UAAU,IAC9CJ,EAAgBtC,KAAK,OACrBsC,EAAgBtC,KAAKK,GACrBC,EAAiBgC,EAAgBK,KAAK,W,+BC1ExCC,GAAO,uCAAG,WAAOzE,GAAP,mBAAA0E,EAAA,sEACSC,MAAM,YAAc3E,GAD7B,cACR4E,EADQ,gBAEaA,EAASC,OAFtB,cAERA,EAFQ,OAGRC,EAAW5C,QAAU2C,GAHb,kBAIPpC,EAAcG,KAAK0B,UAAUQ,KAJtB,2CAAH,sDAqFEC,GA9EO,WAAO,IAAD,EACMC,mBAAoB,IAD1B,mBACnBC,EADmB,KACTC,EADS,OAEAF,mBAAiB,UAFjB,mBAEnBG,EAFmB,KAEZC,EAFY,OAGEJ,mBAAiB,IAHnB,mBAGnBd,EAHmB,KAGXmB,EAHW,OAIML,mBAAoB,IAJ1B,mBAInBM,EAJmB,KAITC,EAJS,KAuBpBC,EAAc,SAACC,EAAiBC,GACpC,IAAM3G,EAAK2G,EAAMC,cAAc5G,GAC/BqG,EAASrG,GACT6G,EAAO7G,IAKH6G,EAAS,SAACC,GACd,IAAMlE,EAAM,YAAIsD,GACbf,QAAO,SAAC7C,GACP,OAAQ6C,EAAoC7C,EAAQnC,SAAW2G,GAASxE,EAAQd,KAAKb,WAAWV,MAAM8G,cAAcC,SAAS7B,EAAO4B,eAAnHzE,EAAQnC,SAAW2G,KAErCG,MAAK,SAACtB,EAAGuB,GACR,OAAIvB,EAAEnE,KAAKb,WAAWV,MAAQiH,EAAE1F,KAAKb,WAAWV,OAAiB,EAC1D0F,EAAEnE,KAAKb,WAAWV,MAAQiH,EAAE1F,KAAKb,WAAWV,MAAQ,EAAI,KAEnEuG,EAAY5D,IAWd,OATAuE,qBAAU,WAnCRvB,MAAM,gBACHwB,MAAK,SAAUvB,GACd,OAAOA,EAASC,UAEjBsB,MAAK,SAAUtB,GACd,IAAMuB,EAAWvB,EAAKwB,MAAM,MAAM1E,KAAI,SAAC2E,GAGrC,OADa7B,GADA6B,EAAU,oBAIzBC,QAAQC,IAAIJ,GAAUD,MAAK,SAAUM,GAEnCvB,EADeuB,WA0BpB,IACHP,qBAAU,WACJZ,GAAgC,IAApBA,EAASxB,QAAgB8B,EAAOT,KAC/C,CAACF,IACJiB,qBAAU,WACRN,EAAOT,KACN,CAACjB,IAEF,uBAAKwC,UAAU,WAAf,UACE,eAACC,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,KAA9B,sBACA,iCACE,gBAACC,EAAA,EAAD,CAAaC,WAAS,EAACC,aAAW,iCAAlC,UACE,eAACC,EAAA,EAAD,CAAiBpC,KAAK,SAASqC,SAAS,SAASzB,WAAsB,WAAVN,EAAoBgC,SAAU3B,IAC3F,eAACyB,EAAA,EAAD,CAAiBpC,KAAK,SAASqC,SAAS,SAASzB,WAAsB,WAAVN,EAAoBgC,SAAU3B,IAC3F,eAACyB,EAAA,EAAD,CAAiBpC,KAAK,OAAOqC,SAAS,OAAOzB,WAAsB,SAAVN,EAAkBgC,SAAU3B,OAEvF,eAAC4B,EAAA,EAAD,CAAWV,UAAU,aAAaxH,KAAK,SAASH,GAAG,SAASiB,KAAK,SAASX,MAAO6E,GAAU,GAAIiD,SAhCtF,SAACzB,GACdL,EAAUK,IA+B2G2B,aAAa,MAAMC,YAAY,sBAElJ,uBAAKZ,UAAU,QAAf,UACE,sBAAKA,UAAU,cAAf,wCAEEpB,GAAYA,EAASxB,OAAS,GAAKwB,EAAS3D,KAAI,SAACN,GAAD,OAC9C,uBAAiCqF,UAAU,gCACzCa,YAAa,SAAC7B,GAAuBA,EAAM8B,aAAaC,QAAQ,UAAW7E,KAAK0B,UAAUjD,IAjFpF,SAACqE,EAAkBgC,GACrChC,EAAM8B,aAAaC,QAAQ,wBAAyBC,GACpDhC,EAAM8B,aAAaC,QAAQ,kBAAmB/B,EAAMiC,YAAYC,QAAQC,YACxEnC,EAAM8B,aAAaC,QAAQ,kBAAmB/B,EAAMiC,YAAYG,QAAQD,YACxEnC,EAAM8B,aAAaO,cAAgB,OA6E8ER,CAAY7B,EAAO,KAAOsC,WAAS,EAD1I,UAEE,sBAAKA,UAAU,QAAQC,IAAK5G,EAAQ6G,OAAQxB,UAAU,eAAeyB,IAAI,KACzE,oBAAGzB,UAAU,gBAAb,SAA8BrF,EAAQd,KAAKb,WAAWV,UAH9CqC,EAAQf,SAASN,gB,SCtFjCoI,GAAmC,SAAC,GAA6B,IAA3BzE,EAA0B,EAA1BA,KAAM0E,EAAoB,EAApBA,cAC9C,OACI,uCACI,eAAC,IAAD,CAAQnJ,KAAK,SAASoJ,SAAUC,IAASC,MACzC,sBAAKR,UAAU,QAAQC,IAAKtE,EAAKC,QAAQvC,QAAQ6G,OAAQxB,UAAU,eAAeyB,IAAI,KACtF,oBAAGzB,UAAU,gBAAb,SAA8B/C,EAAKkC,QACnC,eAAC,IAAD,CAAQ3G,KAAK,SAASoJ,SAAUC,IAASE,OAAQ1J,GAAG,cAAcsJ,cAAeA,QAK9EK,kBAAKN,ICXdO,GAAmC,SAAC,GAA6B,IAA3BhF,EAA0B,EAA1BA,KAAM0E,EAAoB,EAApBA,cAC9C,OACI,uCACI,eAAC,IAAD,CAAQnJ,KAAK,SAASoJ,SAAUC,IAASE,OAAQ1J,GAAG,cAAcsJ,cAAeA,IACjF,sBAAKL,UAAU,QAAQC,IAAKtE,EAAKC,QAAQvC,QAAQ6G,OAAQxB,UAAU,eAAeyB,IAAI,KACtF,oBAAGzB,UAAU,gBAAb,SAA8B/C,EAAKkC,YAKhC6C,kBAAKC,ICVdC,GAAiC,SAAC,GAAc,IAAZjF,EAAW,EAAXA,KACtC,OACI,uCACI,eAAC,IAAD,CAAQzE,KAAK,SAASoJ,SAAUC,IAASC,MACzC,sBAAKR,UAAU,QAAQC,IAAKtE,EAAKC,QAAQvC,QAAQ6G,OAAQxB,UAAU,eAAeyB,IAAI,KACtF,oBAAGzB,UAAU,gBAAb,SAA8B/C,EAAKkC,YAMhC6C,kBAAKE,I,mDCmELC,GArEwB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACjB9D,mBAA4B,IADX,mBAChD+D,EADgD,KACnCC,EADmC,OAE3BhE,oBAAkB,GAFS,mBAEhDiE,EAFgD,KAExCC,EAFwC,KAIjD/B,EAAW,SAACgC,EAAc9J,GAC9B,IAAM+J,EAAQ7H,OAAO8H,OAAO,GAAIN,GAClB,UAAVI,IAAmBC,EAAMpK,MAAQK,GACvB,SAAV8J,IAAkBC,EAAMpJ,KAAOX,GACnC2J,EAAeI,GACP,OAARN,QAAQ,IAARA,KAAUQ,K,UAAWF,IAwBvB,OAZAlD,qBAAU,WASR,OARqB/D,IAA4BoH,WAAU,SAAAnH,GACrDA,GACF4G,EAAe5G,GACf8G,GAAU,IAEVA,GAAU,MAGMM,cACnB,IAGD,sBAAK9C,UAAWuC,EAAS,SAAW,aAApC,SACE,gBAACQ,GAAA,EAAD,CAAMpC,aAAa,MAAnB,UACE,eAACV,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,KAA9B,6BACA,eAAC6C,GAAA,EAAD,CAAW7D,MAAM,OAAO8D,YAAU,EAACC,QAAQ,OAA3C,SACE,eAACxC,EAAA,EAAD,CAAWV,UAAU,aAAaiD,YAAU,EAACzK,KAAK,OAAOH,GAAG,OAAOiB,KAAK,OAAOX,OAAkB,OAAX0J,QAAW,IAAXA,OAAA,EAAAA,EAAa/I,OAAQ,GAAImH,SAAU,SAAA/D,GAAC,OAAI+D,EAAS,OAAQ/D,QAEjJ,eAACsG,GAAA,EAAD,CAAW7D,MAAM,QAAQ8D,YAAU,EAACC,QAAQ,QAA5C,SACE,eAACxC,EAAA,EAAD,CAAWV,UAAU,aAAaiD,YAAU,EAACzK,KAAK,OAAOH,GAAG,QAAQiB,KAAK,QAAQX,OAAkB,OAAX0J,QAAW,IAAXA,OAAA,EAAAA,EAAa/J,QAAS,GAAImI,SAAU,SAAA/D,GAAC,OAAI+D,EAAS,QAAQ/D,QAEpJ,eAACuD,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,KAA9B,yBAGEkC,GAAeA,EAAYvJ,YAAcuJ,EAAYvJ,WAAWmC,KAAI,SAACkI,GAAD,OACpE,eAACH,GAAA,EAAD,CAEI7D,MAAOgE,EAAS7K,MAChB4K,QAASC,EAAS9K,GAClB+K,UACE,eAACC,GAAA,EAAD,CAASC,cAAeH,EAAS7K,MAAOiL,YAAaJ,EAAS5K,YAA9D,SACE,yBAAQC,KAAK,SAAS8H,aAAW,YAAYkD,QAAS,SAAA9G,GAAC,OAAIA,EAAE+G,kBAAkBzD,UAAU,8BAAzF,SACE,eAAC,KAAD,CAAU0D,iBAAe,QAPnC,SAYI,eAAChD,EAAA,EAAD,CAAWV,UAAU,aAAaiD,YAAU,EAACzK,KAAK,OAAOH,GAAI8K,EAAS9K,GAAIiB,KAAM6J,EAAS9K,GAAIM,MAAOwK,EAASxK,MAC7G8H,SAAU,SAAA/D,GAAC,OAhDF,SAACwG,EAAiBvK,GACrC,IAAMgL,EAAetB,EAAYvJ,WAAW8K,WAAU,SAACC,GAAD,OAAgBA,EAAExL,KAAO6K,KACzEY,EAAazB,EAAYvJ,WAAW6K,GAC1CG,EAAEnL,MAAQA,EACV0J,EAAYvJ,WAAW6K,GAASG,EAChC,IAAMpB,EAAoB7H,OAAO8H,OAAO,GAAIN,GAC5CC,EAAeI,GA0CUqB,CAAaZ,EAAS9K,GAAIqE,OAZpCyG,EAAS9K,a,+BCvBb2L,GA7BoB,SAAC,GAC7B,IAD+B3L,EAChC,EADgCA,GAAI4L,EACpC,EADoCA,QAASC,EAC7C,EAD6CA,QAASC,EACtD,EADsDA,QAASC,EAC/D,EAD+DA,QAASC,EACxE,EADwEA,eAAgBC,EACxF,EADwFA,eAAsBC,GAC9G,EADwGtH,KACxG,EAD8GsH,eAAeC,EAC7H,EAD6HA,YAEzHC,EAAWC,YAAc,CAAET,UAASC,UAASG,iBAAgBF,UAASC,UAASE,mBAC/EK,EAAYC,YAAaL,EAAeC,GAF5C,EAGyBK,YAAc,CAAEZ,UAASC,UAASC,UAASC,YAHpE,mBAGKU,EAHL,KAGcC,EAHd,KAWF,OACI,uCACI,uBAAM1M,GAAIA,EAAI2H,UAAU,wBAAwBgF,EAAGP,EAAUE,UAAWA,IACxE,gCACIM,MAlBU,GAmBVC,OAnBU,GAoBVrB,EAAGiB,EAAUK,EACbC,EAAGL,EAAUI,EACbnF,UAAU,2BACVqF,mBAAmB,+BANvB,SAQI,eAACC,GAAA,EAAD,CAAQC,QAAQ,OAAO/D,KAAM,eAAC,KAAD,IAAgBgE,UAjBvC,SAACxG,GACO,IAAlBA,EAAMyG,SAAmC,KAAlBzG,EAAMyG,SAC7BhK,EAAqBpD,YCA7BA,GAAK,EAqIMqN,GAlIK,WAAO,IAAD,EAC0BpH,qBAD1B,mBACjBqH,EADiB,KACEC,EADF,OAEoBtH,mBAAmB,IAFvC,mBAEjBuH,EAFiB,KAEDC,EAFC,OAGQxH,mBAAmC,IAAI1D,KAH/C,mBAGjBmL,EAHiB,KAGPC,EAHO,KAIlBC,EAAsBC,aAAgB,SAACC,GAAD,OAAaA,EAAQF,uBAwDjEzG,qBAAU,WACRsG,GAAkB,SAACM,GAAD,OAChBA,EAAInL,KAAI,SAACoL,GAAQ,IAAD,EAEd,OADAA,EAAGpJ,KAAH,6BAAeoJ,EAAGpJ,MAAlB,IAAwBkC,MAAK,UAAE4G,EAASO,IAAID,EAAGhO,WAAlB,aAAE,EAAqBC,QAC7C+N,UAGV,CAACN,EAAUD,IAEdtG,qBAAU,WASR,OARqB/D,IAAqBoH,WAAU,SAAAxK,GAClDyN,GAAkB,SAACM,GACjB,IAAMG,EAAW,YAAOH,GAClBzC,EAAQ4C,EAAY3C,WAAU,SAAAlH,GAAC,OAAIA,EAAErE,KAAOA,KAElD,OADAkO,EAAYC,OAAO7C,EAAO,GACnB4C,QAGSzD,cACnB,IAEHtD,qBAAU,WASR,OARqB/D,IAAqBoH,WAAU,SAAAxK,GAClD,IAAMoO,EAAqB,GAC3BX,GAAkB,SAACM,GAEjB,OADAA,EAAIrL,SAAQ,SAAC2B,GAAD,OAAoB+J,EAAItL,KAAKuB,MAClC0J,KAET9I,GAAiBmJ,MAEC3D,cACnB,IAEH,IAAM4D,EAAY,CAChBC,OAAQjF,GACRrH,OAAQ4H,GACR1H,KAAM2H,IAGF0E,EAAY,CAChBpK,QAASwH,IAGX,OACE,gBAAC,IAAD,CACE1H,SAAUuJ,EACVgB,UApGc,SAACC,IACyD,IAAtEjB,EAAejC,WAAU,SAAClH,GAAD,OAAYA,EAAErC,SAAWyM,EAAOzM,YACc,IAAtEwL,EAAejC,WAAU,SAAClH,GAAD,OAAYA,EAAEC,SAAWmK,EAAOnK,WAC5DmJ,GAAkB,SAACM,GAAD,OAASW,YAAQ,6BAAKD,GAAN,IAActO,KAAM,YAAa4N,OAkGnEY,iBA3FqB,SAACC,GACxBnB,GAAkB,SAACM,GAAD,OAASc,YAAeD,EAAkBb,MAC5DJ,GAAY,SAAChJ,GAEX,OADAiK,EAAiBlM,SAAQ,SAAA2B,GAAC,OAAIM,EAAKmK,OAAOzK,EAAErE,OACrC2E,MAwFPoK,mBAAmB,EACnBC,sBAAuB,GACvBC,kBAlGsB,SAAChL,GAA+B,IAAD,EACjDiL,EAAejL,IAAQ,UAAIA,EAAS,UAAb,aAAI,EAAajE,KAAM,GACpDoD,EAAsBsK,GAAYA,EAASO,IAAIiB,KAiG7CC,OAxFW,SAACC,GAAD,OAAsC7B,EAAqB6B,IAyFtEC,OA5EW,SAAC1I,GAEd,GADAA,EAAMyE,iBACFkC,EAAmB,CACrB,IAAMhL,EAAmBoB,EAAciD,EAAM8B,aAAa6G,QAAQ,YAE5DzG,EAAkB0G,OAAO5I,EAAM8B,aAAa6G,QAAQ,oBACpDvG,EAAkBwG,OAAO5I,EAAM8B,aAAa6G,QAAQ,oBACpD/F,EAAW+D,EAAkBkC,QAAQ,CAAEhE,EAAG7E,EAAM8I,QAAU5G,EAAU,IAAKkE,EAAGpG,EAAM+I,QAAU3G,EAAU,KACtG4G,EAAkBrN,EAAQf,SAASN,KA9CA,WAAOjB,MA+C1CgK,EAA2B,IAAI3H,EAAYsN,EAAWrN,GAC5DqL,EAAYD,EAASkC,IAAID,EAAW3F,IAEpC,IAAM6F,EAAgB,CACpB7P,GAAI2P,EACJxP,KAAMmC,EAAQf,SAASL,OAAO,iCAC9BqI,WACAuG,MAAO,CAAEC,QAAS,GAClBnL,KAAM,CAAEkC,MAAOxE,EAAQrC,QAAS4E,QAASmF,IAE3CyD,GAAkB,SAACuC,GAAD,OAAQA,EAAGC,OAAOJ,MACpCjC,EAAoBiC,KAyDpBK,WAlFe,SAACvJ,GAClBA,EAAMyE,iBACNzE,EAAM8B,aAAa0H,WAAa,QAiF9B9B,UAAWA,EACXE,UAAWA,EACX6B,YAAa,EACbC,cAAc,EAbhB,UAeE,eAAC,IAAD,CACEnD,QAASoD,IAAkBC,KAC3BC,IAAK,GACL1I,KAAM,KAER,eAAC,IAAD,IACA,eAAC,GAAD,CAAiBiC,SApGJ,SAACxC,GAChB,IAAM3E,EAAM,IAAIL,IAAImL,GACpB9K,EAAIgN,IAAIrI,EAAQvH,GAAIuH,GACpBoG,EAAY/K,U,0FC/CD,OAA0B,iCC+F1B6N,GAtFH,WAAO,IAAD,EACkBxK,oBAAkB,GADpC,mBACTyK,EADS,KACEC,EADF,OAEQ1K,qBAFR,mBAET9C,EAFS,KAEHyN,EAFG,KAchBzJ,qBAAU,WAIR,OAHqB/D,IAAiBoH,WAAU,SAAAnH,GAC1CA,GAASuN,EAAQvN,MAEHoH,cACnB,IAEHtD,qBAAU,WACJhE,GAAMwN,GAAa,KACtB,CAACxN,IAEJ,IAAM0N,EACJ,eAACC,GAAA,EAAD,UACE,eAAC7D,GAAA,EAAD,CAAQC,QAAQ,YAAY/B,QAAS,SAAC9G,GAAD,OAAOjB,EAAqB,KAAjE,wBAIE2N,EACJ,eAACC,GAAA,EAAD,CACEC,KACE,uBAAKtJ,UAAU,OAAf,UACE,eAACuJ,GAAA,EAAD,CAAOhI,IAAK+H,GAAM7H,IAAI,YACtB,eAACxB,EAAA,EAAD,CAAOC,aAAa,KAAKC,KAAK,MAA9B,wBAGJqJ,YAAaN,IAIX/C,EACJ,eAACsD,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,CACErR,GAAG,cACHsR,OAAO,eACPrJ,aAAW,oBACXkD,QAAS,SAAA9G,GAAC,OA7CA,SAACsC,GACf,IAAM4K,EAAY5K,EAAMC,cAAc4K,cAChCxD,EAAKyD,SAASC,cAAc,YAClC1D,EAAG1N,MAAQ6C,GAAQA,EAAK,IAAM,GAC9BoO,EAAUI,YAAY3D,GACtBA,EAAG4D,SACHH,SAASI,YAAY,QACrBN,EAAUO,YAAY9D,GAsCJ7C,CAAQ9G,IACtB0N,UAAW,IACXC,SAAS,QACT9E,QAAQ,QAPV,SASG,wBAKP,OACE,gBAAC+E,GAAA,EAAD,CAAMC,OAAQnB,EAAd,UACE,sBAAKpJ,UAAU,UAAf,SACE,gBAAC,IAAD,WACE,eAAC,GAAD,IACA,sBAAKA,UAAU,oBAAf,SACE,eAAC,GAAD,WAIN,eAACwK,GAAA,EAAD,CACEvF,MAAO,MACP3M,MAAM,eACNmS,OAAQ1B,EACR2B,QAAS,kBAAM1B,GAAa,IAC5B7C,QAAS,CACP,eAACb,GAAA,EAAD,CAAqBC,QAAQ,OAAO/B,QAAS,SAAA9G,GAAC,OAAIsM,GAAa,IAA/D,kBAAY,WANhB,SASE,eAAC2B,GAAA,EAAD,CAAWxE,QAASA,EAApB,SACE,eAACyE,GAAA,EAAD,CAAevS,GAAG,eAAlB,SAAkCmD,GAAQA,EAAK,aChFnDqP,I,OAAS,CACb,CACEC,KAAM,IACNC,UAAWjC,MAIfkC,IAASC,OACP,eAAC,IAAD,CAAQC,cAAc,EAAtB,SACE,eAAC,IAAD,UACGL,GAAO5P,KAAI,SAACkQ,GAAD,OACV,eAAC,IAAD,CAAOC,OAAK,EAACN,KAAMK,EAAML,KAAMG,OAAQ,kBAAM,eAACE,EAAMJ,UAAP,MAA0BI,EAAML,aAInFhB,SAASuB,eAAe,U","file":"static/js/main.4c0a74b1.chunk.js","sourcesContent":["// Kamelet data model\nexport class Property {\n  id: string = '';\n  title: string = '';\n  description: string = '';\n  type: string = '';\n  default: string = '';\n  format: string = '';\n  'x-descriptors': string = '';\n  value: string | number = '';\n}\n\nexport class Definition {\n  title: string = '';\n  description: string = '';\n  required: string[] = [];\n  properties: any = {};\n}\n\nexport class KameletSpec {\n  definition: Definition = new Definition();\n  types: any = {};\n  flow: any = {};\n}\n\nexport class Labels {\n  'camel.apache.org/kamelet.type': string | any = '';\n}\n\nexport class Annotations {\n  'camel.apache.org/kamelet.icon': string | any = '';\n}\n\nexport class KameletMetadata {\n  name: string = '';\n  labels: Labels = new Labels();\n  annotations: Annotations = new Annotations();\n}\n\nexport class Kamelet {\n  apiVersion: string = 'camel.apache.org/v1alpha1';\n  kind: string = 'Kamelet';\n  metadata: KameletMetadata = new KameletMetadata();\n  spec: KameletSpec = new KameletSpec();\n\n  type(): string {\n    return this.metadata.labels[\"camel.apache.org/kamelet.type\"] || '';\n  }\n\n  icon(): string {\n    return this.metadata.annotations[\"camel.apache.org/kamelet.icon\"] || '';\n  }\n\n  title(): string {\n    return this.spec.definition.title;\n  }\n\n  properties(): any {\n    return this.spec.definition.properties;\n  }\n}\n\n// KameletBinding data model\nexport class Ref {\n  apiVersion: string = 'camel.apache.org/v1alpha1';\n  kind: string = 'Kamelet';\n  name: string = '';\n}\n\nexport class Source {\n  // uri: string | any = undefined;\n  ref: Ref = new Ref();\n  properties: any;\n}\n\nexport class Sink {\n  // uri: string | any = undefined;\n  ref: Ref = new Ref();\n  properties: any;\n}\n\nexport class Step {\n  ref: Ref = new Ref();\n  properties: any;\n}\n\nexport class KameletBindingSpec {\n  source: Source = new Source();\n  steps: Step[] | any = [];\n  sink: Sink = new Sink();\n}\n\nexport class KameletBindingMetadata {\n  name: string = '';\n}\n\nclass KameletBinding {\n  apiVersion: string = 'camel.apache.org/v1alpha1';\n  kind: string = 'KameletBinding';\n  metadata: KameletBindingMetadata = new KameletBindingMetadata();\n  spec: KameletBindingSpec = new KameletBindingSpec();\n}\n\nexport { KameletBinding }\n\n\nexport class BindingData {\n  id: string = '';\n  name: string = '';\n  title: string = '';\n  kamelet: Kamelet;\n  properties: Property[] = [];\n\n  constructor(id: string, kamelet: Kamelet) {\n    this.id = id;\n    this.kamelet = kamelet;\n    this.name = kamelet.metadata.name;\n    this.title = kamelet.spec.definition.title;\n    const map: Map<string, any> = kamelet.spec.definition.properties ? new Map(Object.entries(kamelet.spec.definition.properties)) : new Map();\n    map.forEach((value, key, map) => {\n      const prop = new Property();\n      prop.id = key;\n      prop.title = value.title;\n      prop.default = value.default;\n      prop.description = value.description;\n      prop.format = value.format;\n      prop.type = value.type;\n      prop[\"x-descriptors\"] = value[\"x-descriptors\"];\n      this.properties.push(prop);\n    })\n  }\n}","import { Subject } from 'rxjs';\nimport { BindingData, Kamelet, KameletBinding, Step, Sink, Property } from \"./Models\";\nimport { FlowElement } from 'react-flow-renderer';\nimport YAML from 'yaml'\n\nconst selection = new Subject<BindingData | any>();\nconst edgeDeletion = new Subject<string>();\nconst generator = new Subject<string>();\nconst yaml = new Subject<[number, string]>();\n\nexport const Karavan = {\n    sendSelection: (message: BindingData | any) => selection.next(message),\n    clearSelection: () => selection.next(''),\n    onSelectionChange: () => selection.asObservable(),\n\n    sendDeletion: (id: string) => edgeDeletion.next(id),\n    onDeletion: () => edgeDeletion.asObservable(),\n\n    sendGenerate: (id: string) => generator.next(id),\n    onGenerate: () => generator.asObservable(),\n\n    sendYaml: (id: string) => yaml.next([Date.now(), id]),\n    onYaml: () => yaml.asObservable(),\n};\n\nexport const jsonToKamelet = (json: string) => {\n    const fromJson: Kamelet = JSON.parse(json) as Kamelet;\n    const k: Kamelet = new Kamelet();\n    k.apiVersion = fromJson.apiVersion;\n    k.kind = fromJson.kind;\n    k.metadata = fromJson.metadata;\n    k.spec = fromJson.spec;\n    return k;\n}\n\nconst findNextElement = (elements: any[], start: FlowElement): FlowElement => {\n    const connect = elements.find((e: any) => e.type === 'connect' && e.source === start.id);\n    return connect && elements.find((e: any) => e.type !== 'connect' && e.id === connect.target);\n}\n\nconst createProperties = (properties: Property[]): any => {\n    const result:any = {};\n    properties.forEach(prop => {\n        if (prop.value) result[prop.id] = prop.value;\n    });\n    return result;\n}\n\nconst sourceBind = (source: FlowElement): KameletBinding => {\n    const bind: KameletBinding = new KameletBinding();\n    bind.metadata.name = source.data.binding.name;\n    bind.spec.source.ref.name = source.data.binding.kamelet.metadata.name;\n    bind.spec.source.properties = createProperties(source.data.binding.properties);\n    if (Object.keys(bind.spec.source.properties).length === 0) delete bind.spec.source.properties;\n    return bind;\n}\nconst stepBind = (step: FlowElement): Step => {\n    const bind: Step = new Step();\n    bind.ref.name = step.data.binding.kamelet.metadata.name;\n    bind.properties = createProperties(step.data.binding.properties);\n    if (Object.keys(bind.properties).length === 0) delete bind.properties;\n    return bind;\n}\n\nconst sinkBind = (step: FlowElement): Step => {\n    const bind: Sink = new Sink();\n    bind.ref.name = step.data.binding.kamelet.metadata.name;\n    bind.properties = createProperties(step.data.binding.properties);\n    if (Object.keys(bind.properties).length === 0) delete bind.properties;\n    return bind;\n}\n\nexport const generateBindings = (elements: FlowElement[]) => {\n    const sources: FlowElement[] = elements.filter(e => e.type === 'source');\n    const kameletBindings: string[] = [];\n    sources.forEach(source => {\n        const bind: KameletBinding = sourceBind(source);\n        let next = source;\n        while (next) {\n            next = findNextElement(elements, next);\n            if (next && next.type === 'action') {\n                bind.spec.steps.push(stepBind(next));\n            } else if (next && next.type === 'sink') {\n                bind.spec.sink = sinkBind(next);\n            }\n        }\n        if (bind.spec.steps.length === 0) delete bind.spec.steps;\n        const yaml = YAML.stringify(bind, { mapAsMap: true });\n        kameletBindings.push(\"---\");\n        kameletBindings.push(yaml);\n        Karavan.sendYaml(kameletBindings.join(\"\\n\"))\n    });\n}\n","import React, { DragEvent, useState, useEffect } from 'react';\nimport { ToggleGroup, ToggleGroupItem, Title, FormGroup, TextInput } from '@patternfly/react-core';\nimport { Kamelet } from \"../Models\";\nimport { jsonToKamelet } from \"../Karavan\";\nimport * as yaml from 'js-yaml';\nimport '../karavan.css';\nimport \"@patternfly/patternfly/patternfly.css\";\n\n\nconst onDragStart = (event: DragEvent, nodeType: string) => {\n  event.dataTransfer.setData('application/reactflow', nodeType);\n  event.dataTransfer.setData('karavan/offsetX', event.nativeEvent.offsetX.toString());\n  event.dataTransfer.setData('karavan/offsetY', event.nativeEvent.offsetY.toString());\n  event.dataTransfer.effectAllowed = 'move';\n};\n\nconst request = async (name: string) => {\n  const response = await fetch('kamelets/' + name);\n  const text: string = await response.text();\n  const fromYaml = yaml.load(text);\n  return jsonToKamelet(JSON.stringify(fromYaml));\n}\n\nconst KameletsPanel = () => {\n  const [kamelets, setKamelets] = useState<Kamelet[]>([]);\n  const [group, setGroup] = useState<string>(\"source\");\n  const [filter, setFilter] = useState<string>('');\n  const [filtered, setFiltered] = useState<Kamelet[]>([]);\n\n  const getKamelets = () => {\n    fetch('kamelets.txt')\n      .then(function (response) {\n        return response.text();\n      })\n      .then(function (text) {\n        const listYaml = text.split(\"\\n\").map((element: any) => {\n          const name = element + '.kamelet.yaml';\n          const yaml = request(name);\n          return yaml;\n        });\n        Promise.all(listYaml).then(function (list) {\n          const result = list as Kamelet[];\n          setKamelets(result);\n        });\n      });\n  };\n  const selectGroup = (isSelected: any, event: any) => {\n    const id = event.currentTarget.id;\n    setGroup(id);\n    refine(id);\n  };\n  const search = (event: string) => {\n    setFilter(event);\n  };\n  const refine = (label: string) => {\n    const map = [...kamelets]\n      .filter((kamelet: Kamelet) => {\n        return !filter ? kamelet.type() === label : kamelet.type() === label && kamelet.spec.definition.title.toLowerCase().includes(filter.toLowerCase());\n      })\n      .sort((a, b) => {\n        if (a.spec.definition.title < b.spec.definition.title) { return -1; }\n        return a.spec.definition.title > b.spec.definition.title ? 1 : 0;\n      });\n    setFiltered(map);\n  };\n  useEffect(() => {\n    getKamelets();\n  }, []);\n  useEffect(() => {\n    if (filtered && filtered.length === 0) { refine(group) }\n  }, [kamelets]);\n  useEffect(() => {\n    refine(group);\n  }, [filter]); \n  return (\n    <div className=\"kamelets\">\n      <Title headingLevel=\"h1\" size=\"md\">Kamelets</Title>\n      <div>\n        <ToggleGroup isCompact aria-label=\"Default with single selectable\">\n          <ToggleGroupItem text=\"Source\" buttonId=\"source\" isSelected={group === \"source\"} onChange={selectGroup} />\n          <ToggleGroupItem text=\"Action\" buttonId=\"action\" isSelected={group === \"action\"} onChange={selectGroup} />\n          <ToggleGroupItem text=\"Sink\" buttonId=\"sink\" isSelected={group === \"sink\"} onChange={selectGroup} />\n        </ToggleGroup>\n        <TextInput className=\"text-field\" type=\"search\" id=\"search\" name=\"search\" value={filter || ''} onChange={search} autoComplete=\"off\" placeholder=\"Search by name\"/>\n      </div>\n      <div className=\"inner\">\n        <div className=\"description\">Drag kamelet to the panel.</div>\n        {\n          filtered && filtered.length > 0 && filtered.map((kamelet) =>\n            <div key={kamelet.metadata.name} className=\"node react-flow__node-kamelet\"\n              onDragStart={(event: DragEvent) => { event.dataTransfer.setData('kamelet', JSON.stringify(kamelet)); onDragStart(event, \"\") }} draggable>\n              <img draggable=\"false\" src={kamelet.icon()} className=\"kamelet-icon\" alt=\"\"></img>\n              <p className=\"kamelet-title\">{kamelet.spec.definition.title}</p>\n            </div>\n          )\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default KameletsPanel;","import React, { memo, FC } from 'react';\nimport { Handle, Position, NodeProps } from 'react-flow-renderer';\n\nconst KameletNodeAction: FC<NodeProps> = ({ data, isConnectable }) => {\n    return (\n        <>\n            <Handle type=\"target\" position={Position.Top} />\n            <img draggable=\"false\" src={data.binding.kamelet.icon()} className=\"kamelet-icon\" alt=\"\"></img>\n            <p className=\"kamelet-title\">{data.label}</p>\n            <Handle type=\"source\" position={Position.Bottom} id=\"from-action\" isConnectable={isConnectable} />\n        </>\n    );\n};\n\nexport default memo(KameletNodeAction);\n","import React, { memo, FC } from 'react';\nimport { Handle, Position, NodeProps } from 'react-flow-renderer';\n\nconst KameletNodeSource: FC<NodeProps> = ({ data, isConnectable }) => {\n    return (\n        <>\n            <Handle type=\"source\" position={Position.Bottom} id=\"from-source\" isConnectable={isConnectable} />\n            <img draggable=\"false\" src={data.binding.kamelet.icon()} className=\"kamelet-icon\" alt=\"\"></img>\n            <p className=\"kamelet-title\">{data.label}</p>\n        </>\n    );\n};\n\nexport default memo(KameletNodeSource);\n","import React, { memo, FC } from 'react';\nimport { Handle, Position, NodeProps } from 'react-flow-renderer';\n\nconst KameletNodeSink: FC<NodeProps> = ({ data }) => {\n    return (\n        <>\n            <Handle type=\"target\" position={Position.Top}/>\n            <img draggable=\"false\" src={data.binding.kamelet.icon()} className=\"kamelet-icon\" alt=\"\"></img>\n            <p className=\"kamelet-title\">{data.label}</p>\n            \n        </>\n    );\n};\n\nexport default memo(KameletNodeSink);\n","import React, { useState, useEffect, FC } from 'react';\nimport { Form, FormGroup, TextInput, Title, Popover } from '@patternfly/react-core';\nimport HelpIcon from '@patternfly/react-icons/dist/js/icons/help-icon';\nimport { Karavan } from \"../Karavan\";\nimport { BindingData, Property } from \"../Models\";\nimport '../karavan.css';\nimport \"@patternfly/patternfly/patternfly.css\";\n\nexport interface NodeProps<T = any> {\n  onUpdate?: (binging: BindingData) => void;\n}\n\nconst PropertiesPanel: FC<NodeProps> = ({ onUpdate }) => {\n  const [bindingData, setBindingData] = useState<BindingData | any>({});\n  const [hidden, setHidden] = useState<Boolean>(true);\n\n  const onChange = (field:string, value: string) => {\n    const clone = Object.assign({}, bindingData);\n    if (field === 'title') clone.title = value;\n    if (field === 'name') clone.name = value;\n    setBindingData(clone);\n    onUpdate?.call(this, clone);\n  };\n\n  const fieldChanged = (fieldId: string, value: string | number) => {\n    const index:number = bindingData.properties.findIndex((x:Property) => x.id === fieldId);\n    const p:Property = bindingData.properties[index];\n    p.value = value;\n    bindingData.properties[index] = p;\n    const clone:BindingData = Object.assign({}, bindingData);\n    setBindingData(clone);\n  };\n\n  useEffect(() => {\n    const subscription = Karavan.onSelectionChange().subscribe(message => {\n      if (message) {\n        setBindingData(message);\n        setHidden(false);\n      } else {\n        setHidden(true);\n      }\n    });\n    return subscription.unsubscribe;\n  }, []);\n\n  return (\n    <div className={hidden ? 'hidden' : 'properties'}>\n      <Form autoComplete=\"off\">\n        <Title headingLevel=\"h1\" size=\"md\">Kamelet Binding</Title>\n        <FormGroup label=\"Name\" isRequired fieldId=\"name\">\n          <TextInput className=\"text-field\" isRequired type=\"text\" id=\"name\" name=\"name\" value={bindingData?.name || ''} onChange={e => onChange('name', e)} />\n        </FormGroup>\n        <FormGroup label=\"Title\" isRequired fieldId=\"title\">\n          <TextInput className=\"text-field\" isRequired type=\"text\" id=\"title\" name=\"title\" value={bindingData?.title || ''} onChange={e => onChange('title',e)} />\n        </FormGroup>\n        <Title headingLevel=\"h1\" size=\"md\">Properties:</Title>\n      \n        {\n          bindingData && bindingData.properties && bindingData.properties.map((property: Property) => \n          <FormGroup\n              key={property.id}\n              label={property.title}\n              fieldId={property.id}\n              labelIcon={\n                <Popover headerContent={property.title} bodyContent={property.description} >\n                  <button type=\"button\" aria-label=\"More info\" onClick={e => e.preventDefault()} className=\"pf-c-form__group-label-help\" >\n                    <HelpIcon noVerticalAlign />\n                  </button>\n                </Popover>\n              }\n            >\n              <TextInput className=\"text-field\" isRequired type=\"text\" id={property.id} name={property.id} value={property.value} \n              onChange={e => fieldChanged(property.id, e)}/>\n            </FormGroup>\n          )\n        }\n      </Form>\n    </div >\n  );\n};\n\nexport default PropertiesPanel;","import { FC } from 'react';\nimport { EdgeProps, getBezierPath, getMarkerEnd, getEdgeCenter } from 'react-flow-renderer';\nimport { Button } from '@patternfly/react-core';\nimport ButtonIcon from '@patternfly/react-icons/dist/js/icons/circle-icon';\nimport {Karavan} from '../Karavan';\n\nconst foreignObjectSize = 16;\n\nconst ConnectEdge: FC<EdgeProps> = ({ id, sourceX, sourceY, targetX, targetY, sourcePosition, targetPosition, data, arrowHeadType, markerEndId,\n}) => {\n    const edgePath = getBezierPath({ sourceX, sourceY, sourcePosition, targetX, targetY, targetPosition });\n    const markerEnd = getMarkerEnd(arrowHeadType, markerEndId);\n    const [centerX, centerY] = getEdgeCenter({ sourceX, sourceY, targetX, targetY, });\n\n    const onKeyDown = (event: any) => {\n        if (event.keyCode === 8 || event.keyCode === 46) {\n            Karavan.sendDeletion(id);\n        }\n    };\n\n    return (\n        <>\n            <path id={id} className=\"react-flow__edge-path\" d={edgePath} markerEnd={markerEnd} />\n            <foreignObject\n                width={foreignObjectSize}\n                height={foreignObjectSize}\n                x={centerX - foreignObjectSize / 2}\n                y={centerY - foreignObjectSize / 2}\n                className=\"edgebutton-foreignobject\"\n                requiredExtensions=\"http://www.w3.org/1999/xhtml\"\n            >\n                <Button variant=\"link\" icon={<ButtonIcon />} onKeyDown={onKeyDown} />\n            </foreignObject>\n        </>\n    );\n};\n\nexport default ConnectEdge;","import React, { useState, DragEvent, useEffect } from 'react';\nimport ReactFlow, {\n  addEdge, removeElements, Controls, OnLoadParams, Elements, Connection, Edge,\n  ElementId, Node, Background, BackgroundVariant, useStoreActions, FlowElement\n} from 'react-flow-renderer';\n\nimport KameletNodeAction from './KameletNodeAction';\nimport KameletNodeSource from './KameletNodeSource';\nimport KameletNodeSink from './KameletNodeSink';\nimport PropertiesPanel from './PropertiesPanel';\nimport ConnectEdge from './ConnectEdge';\nimport { Kamelet, BindingData } from \"../Models\";\nimport { Karavan, jsonToKamelet, generateBindings } from \"../Karavan\";\n\nimport '../karavan.css';\n\nlet id = 0;\nconst getId = (name: String): ElementId => name + `_${id++}`;\n\nconst KaravanFlow = () => {\n  const [reactFlowInstance, setReactFlowInstance] = useState<OnLoadParams>();\n  const [visualElements, setVisualElements] = useState<Elements>([]);\n  const [bindings, setBindings] = useState<Map<string, BindingData>>(new Map());\n  const setSelectedElements = useStoreActions((actions) => actions.setSelectedElements);\n\n  const onConnect = (params: Connection | Edge) => {\n    if (visualElements.findIndex((e: any) => e.source === params.source) === -1\n      && visualElements.findIndex((e: any) => e.target === params.target) === -1) {\n      setVisualElements((els) => addEdge({ ...params, type: 'connect' }, els))\n    }\n  };\n  const onSelectionChange = (elements: Elements | null) => {\n    const elId: string = elements && elements[0]?.id || '';\n    Karavan.sendSelection(bindings && bindings.get(elId));\n  };\n  const onElementsRemove = (elementsToRemove: Elements) => {\n    setVisualElements((els) => removeElements(elementsToRemove, els));\n    setBindings((bind) => {\n      elementsToRemove.forEach(e => bind.delete(e.id));\n      return bind;\n    });\n  }\n  const onLoad = (_reactFlowInstance: OnLoadParams) => setReactFlowInstance(_reactFlowInstance);\n\n  const onUpdate = (element: BindingData) => {\n    const map = new Map(bindings);\n    map.set(element.id, element);\n    setBindings(map);\n  }\n\n  const onDragOver = (event: DragEvent) => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  };\n\n  const onDrop = (event: DragEvent) => {\n    event.preventDefault();\n    if (reactFlowInstance) {\n      const kamelet: Kamelet = jsonToKamelet(event.dataTransfer.getData('kamelet'));\n\n      const offsetX: number = Number(event.dataTransfer.getData('karavan/offsetX'));\n      const offsetY: number = Number(event.dataTransfer.getData('karavan/offsetY'));\n      const position = reactFlowInstance.project({ x: event.clientX - offsetX - 180, y: event.clientY - offsetY - 76 });\n      const elementId = getId(kamelet.metadata.name);\n      const bindingData: BindingData = new BindingData(elementId, kamelet);\n      setBindings(bindings.set(elementId, bindingData));\n\n      const newNode: Node = {\n        id: elementId,\n        type: kamelet.metadata.labels['camel.apache.org/kamelet.type'],\n        position,\n        style: { opacity: 1 },\n        data: { label: kamelet.title(), binding: bindingData },\n      };\n      setVisualElements((es) => es.concat(newNode));\n      setSelectedElements(newNode);\n    }\n  };\n\n  useEffect(() => {\n    setVisualElements((els) =>\n      els.map((el) => {\n        el.data = { ...el.data, label: bindings.get(el.id)?.title };\n        return el;\n      })\n    );\n  }, [bindings, setVisualElements]);\n\n  useEffect(() => {\n    const subscription = Karavan.onDeletion().subscribe(id => {\n      setVisualElements((els) => {\n        const newElements = [...els];\n        const index = newElements.findIndex(e => e.id === id);\n        newElements.splice(index, 1);\n        return newElements;\n      });\n    });\n    return subscription.unsubscribe;\n  }, []);\n\n  useEffect(() => {\n    const subscription = Karavan.onGenerate().subscribe(id => {\n      const vis: FlowElement[] = [];\n      setVisualElements((els) => {\n        els.forEach((e: FlowElement) => vis.push(e));\n        return els;\n      });\n      generateBindings(vis);\n    });\n    return subscription.unsubscribe;\n  }, []);\n\n  const nodeTypes = {\n    action: KameletNodeAction,\n    source: KameletNodeSource,\n    sink: KameletNodeSink\n  };\n\n  const edgeTypes = {\n    connect: ConnectEdge,\n  };\n\n  return (\n    <ReactFlow\n      elements={visualElements}\n      onConnect={onConnect}\n      onElementsRemove={onElementsRemove}\n      selectNodesOnDrag={true}\n      multiSelectionKeyCode={''}\n      onSelectionChange={onSelectionChange}\n      onLoad={onLoad}\n      onDrop={onDrop}\n      onDragOver={onDragOver}\n      nodeTypes={nodeTypes}\n      edgeTypes={edgeTypes}\n      defaultZoom={1.0}\n      zoomOnScroll={false}\n    >\n      <Background\n        variant={BackgroundVariant.Dots}\n        gap={24}\n        size={0.5}\n      />\n      <Controls />\n      <PropertiesPanel onUpdate={onUpdate} />\n    </ReactFlow>\n  );\n};\n\nexport default KaravanFlow;","export default __webpack_public_path__ + \"static/media/logo.9cbbe6ed.svg\";","import React, { useState, useEffect } from 'react';\nimport { ReactFlowProvider } from 'react-flow-renderer';\nimport KameletsPanel from './components/KameletsPanel';\nimport KaravanFlow from './components/KaravanFlow';\nimport { Page, PageHeader, PageHeaderTools, Brand, Title, Button, Modal, CodeBlock, CodeBlockAction, CodeBlockCode, ClipboardCopyButton } from '@patternfly/react-core';\nimport logo from './logo.svg';\nimport { Karavan } from './Karavan';\nimport './karavan.css';\n\nconst App = () => {\n  const [modalOpen, setModalOpen] = useState<boolean>(false);\n  const [yaml, setYaml] = useState<[number, string]>();\n\n  const onClick = (event: any) => {\n    const clipboard = event.currentTarget.parentElement;\n    const el = document.createElement('textarea');\n    el.value = yaml && yaml[1] || '';\n    clipboard.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    clipboard.removeChild(el);\n  };\n\n  useEffect(() => {\n    const subscription = Karavan.onYaml().subscribe(message => {\n      if (message) setYaml(message);\n    });\n    return subscription.unsubscribe;\n  }, []);\n\n  useEffect(() => {\n    if (yaml) setModalOpen(true);\n  }, [yaml]);\n\n  const Tools = (\n    <PageHeaderTools>\n      <Button variant=\"secondary\" onClick={(e) => Karavan.sendGenerate('')}>Generate</Button>\n    </PageHeaderTools>\n  );\n\n  const Header = (\n    <PageHeader\n      logo={\n        <div className=\"logo\">\n          <Brand src={logo} alt=\"Karavan\" />\n          <Title headingLevel=\"h1\" size=\"3xl\">Karavan</Title>\n        </div>\n      }\n      headerTools={Tools}\n    />\n  );\n\n  const actions = (\n    <CodeBlockAction>\n      <ClipboardCopyButton\n        id=\"copy-button\"\n        textId=\"code-content\"\n        aria-label=\"Copy to clipboard\"\n        onClick={e => onClick(e)}\n        exitDelay={600}\n        maxWidth=\"110px\"\n        variant=\"plain\"\n      >\n        {'Copy to clipboard'}\n      </ClipboardCopyButton>\n    </CodeBlockAction>\n  );\n\n  return (\n    <Page header={Header}>\n      <div className=\"karavan\">\n        <ReactFlowProvider >\n          <KameletsPanel />\n          <div className=\"reactflow-wrapper\">\n            <KaravanFlow />\n          </div>\n        </ReactFlowProvider>\n      </div>\n      <Modal\n        width={'75%'}\n        title=\"KamelBinding\"\n        isOpen={modalOpen}\n        onClose={() => setModalOpen(false)}\n        actions={[\n          <Button key=\"cancel\" variant=\"link\" onClick={e => setModalOpen(false)}>Close</Button>\n        ]}\n      >\n        <CodeBlock actions={actions}>\n          <CodeBlockCode id=\"code-content\">{yaml && yaml[1]}</CodeBlockCode>\n        </CodeBlock>\n      </Modal>\n    </Page>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\nimport App from './App';\n\nimport './index.css';\n\nconst routes = [\n  {\n    path: '/',\n    component: App,\n  },\n];\n\nReactDOM.render(\n  <Router forceRefresh={true}>\n    <Switch>\n      {routes.map((route) => (\n        <Route exact path={route.path} render={() => <route.component />} key={route.path} />\n      ))}\n    </Switch>\n  </Router>,\n  document.getElementById('root')\n);"],"sourceRoot":""}